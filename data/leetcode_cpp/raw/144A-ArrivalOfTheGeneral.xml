<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="C:\Users\DRACO\PycharmProjects\Data-Science-Term-Project-1\data\leetcode_cpp\raw\144A-ArrivalOfTheGeneral.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>numSoldiers</name></decl>;</decl_stmt> <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>numSoldiers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>currentSoldier</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>minSoldier</name> <init>= <expr><literal type="number">101</literal></expr></init></decl>,<decl><type ref="prev"/><name>maxSoldier</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>minPos</name> <init>= <expr><literal type="number">100</literal></expr></init></decl>,<decl><type ref="prev"/><name>maxPos</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>k</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>k</name> <operator>&lt;</operator> <name>numSoldiers</name></expr>;</condition> <incr><expr><operator>++</operator><name>k</name></expr></incr>)</control><block>{<block_content>
        <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>currentSoldier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if<condition>(<expr><name>currentSoldier</name> <operator>&gt;</operator>  <name>maxSoldier</name></expr>)</condition><block>{<block_content><expr_stmt><expr><name>maxPos</name> <operator>=</operator> <name>k</name></expr>;</expr_stmt> <expr_stmt><expr><name>maxSoldier</name> <operator>=</operator> <name>currentSoldier</name></expr>;</expr_stmt></block_content>}</block></if></if_stmt>
        <if_stmt><if>if<condition>(<expr><name>currentSoldier</name> <operator>&lt;=</operator> <name>minSoldier</name></expr>)</condition><block>{<block_content><expr_stmt><expr><name>minPos</name> <operator>=</operator> <name>k</name></expr>;</expr_stmt> <expr_stmt><expr><name>minSoldier</name> <operator>=</operator> <name>currentSoldier</name></expr>;</expr_stmt></block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <decl_stmt><decl><type><name>int</name></type> <name>output</name> <init>= <expr><name>maxPos</name> <operator>+</operator> <operator>(</operator><name>numSoldiers</name> <operator>-</operator> <literal type="number">1</literal> <operator>-</operator> <name>minPos</name><operator>)</operator></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><name>minPos</name> <operator>&lt;</operator> <name>maxPos</name></expr>)</condition><block>{<block_content><expr_stmt><expr><operator>--</operator><name>output</name></expr>;</expr_stmt></block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>,<argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
