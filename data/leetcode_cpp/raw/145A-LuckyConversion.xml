<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode_cpp\raw\145A-LuckyConversion.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{<block_content>

    <decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>string</name></name></type> <name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>;</decl_stmt> 
    <expr_stmt><expr><call><name>getline</name><argument_list>(<argument><expr><name><name>std</name><operator>::</operator><name>cin</name></name></expr></argument>, <argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>getline</name><argument_list>(<argument><expr><name><name>std</name><operator>::</operator><name>cin</name></name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>long</name></type> <name>ftos</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></decl>, <decl><type ref="prev"/><name>stof</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></decl>;</decl_stmt>

    <for>for<control>(<init><decl><type><name>int</name></type> <name>k</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>k</name> <operator>&lt;</operator> <call><name><name>a</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>k</name><operator>++</operator></expr></incr>)</control><block>{<block_content>
        <if_stmt><if>if<condition>(<expr><name><name>a</name><index>[<expr><name>k</name></expr>]</index></name> <operator>==</operator> <literal type="char">'4'</literal> <operator>&amp;&amp;</operator> <name><name>b</name><index>[<expr><name>k</name></expr>]</index></name> <operator>==</operator> <literal type="char">'7'</literal></expr>)</condition><block>{<block_content><expr_stmt><expr><operator>++</operator><name>ftos</name></expr>;</expr_stmt></block_content>}</block></if>
        <if type="elseif">else if<condition>(<expr><name><name>a</name><index>[<expr><name>k</name></expr>]</index></name> <operator>==</operator> <literal type="char">'7'</literal> <operator>&amp;&amp;</operator> <name><name>b</name><index>[<expr><name>k</name></expr>]</index></name> <operator>==</operator> <literal type="char">'4'</literal></expr>)</condition><block>{<block_content><expr_stmt><expr><operator>++</operator><name>stof</name></expr>;</expr_stmt></block_content>}</block></if></if_stmt>
    </block_content>}</block></for>

    <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%ld\n"</literal></expr></argument>, <argument><expr><ternary><condition><expr><operator>(</operator><name>ftos</name> <operator>&gt;</operator> <name>stof</name><operator>)</operator></expr> ?</condition><then> <expr><name>ftos</name></expr> </then><else>: <expr><name>stof</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
