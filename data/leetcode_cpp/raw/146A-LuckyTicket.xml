<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="C:\Users\DRACO\PycharmProjects\Data-Science-Term-Project-1\data\leetcode_cpp\raw\146A-LuckyTicket.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>


<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt> <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>string</name></type> <name>number</name></decl>;</decl_stmt> <expr_stmt><expr><call><name>getline</name><argument_list>(<argument><expr><name>cin</name></expr></argument>, <argument><expr><name>number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>string</name></type> <name>output</name> <init>= <expr><literal type="string">"YES"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>firstSum</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>secondSum</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>k</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>k</name> <operator>&lt;</operator> <name>n</name><operator>/</operator><literal type="number">2</literal></expr>;</condition> <incr><expr><name>k</name><operator>++</operator></expr></incr>)</control><block>{<block_content>
        <if_stmt><if>if<condition>(<expr><name><name>number</name><index>[<expr><name>k</name></expr>]</index></name> <operator>!=</operator> <literal type="char">'4'</literal> <operator>&amp;&amp;</operator> <name><name>number</name><index>[<expr><name>k</name></expr>]</index></name> <operator>!=</operator> <literal type="char">'7'</literal></expr>)</condition><block>{<block_content><expr_stmt><expr><name>output</name> <operator>=</operator> <literal type="string">"NO"</literal></expr>;</expr_stmt> <break>break;</break></block_content>}</block></if></if_stmt>
        <if_stmt><if>if<condition>(<expr><name><name>number</name><index>[<expr><name>n</name><operator>/</operator><literal type="number">2</literal> <operator>+</operator> <name>k</name></expr>]</index></name> <operator>!=</operator> <literal type="char">'4'</literal> <operator>&amp;&amp;</operator> <name><name>number</name><index>[<expr><name>n</name><operator>/</operator><literal type="number">2</literal> <operator>+</operator> <name>k</name></expr>]</index></name> <operator>!=</operator> <literal type="char">'7'</literal></expr>)</condition><block>{<block_content><expr_stmt><expr><name>output</name> <operator>=</operator> <literal type="string">"NO"</literal></expr>;</expr_stmt> <break>break;</break></block_content>}</block></if></if_stmt>
        <expr_stmt><expr><name>firstSum</name> <operator>+=</operator> <name><name>number</name><index>[<expr><name>k</name></expr>]</index></name> <operator>-</operator> <literal type="char">'0'</literal></expr>;</expr_stmt> <expr_stmt><expr><name>secondSum</name> <operator>+=</operator> <name><name>number</name><index>[<expr><name>n</name><operator>/</operator><literal type="number">2</literal> <operator>+</operator> <name>k</name></expr>]</index></name> <operator>-</operator> <literal type="char">'0'</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <if_stmt><if>if<condition>(<expr><name>firstSum</name> <operator>!=</operator> <name>secondSum</name></expr>)</condition><block>{<block_content><expr_stmt><expr><name>output</name> <operator>=</operator> <literal type="string">"NO"</literal></expr>;</expr_stmt></block_content>}</block></if></if_stmt>
    <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>output</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
