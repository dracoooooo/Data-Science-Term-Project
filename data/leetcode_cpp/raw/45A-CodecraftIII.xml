<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode_cpp\raw\45A-CodecraftIII.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{<block_content>

    <decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>N</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>vector</name><argument_list type="generic">&lt;<argument><expr><name><name>std</name><operator>::</operator><name>string</name></name></expr></argument>&gt;</argument_list></name></type> <name>months</name><argument_list>(<argument><expr><name>N</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <expr_stmt><expr><name><name>months</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="string">"January"</literal></expr>;</expr_stmt> <expr_stmt><expr><name><name>months</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="string">"February"</literal></expr>;</expr_stmt> <expr_stmt><expr><name><name>months</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <literal type="string">"March"</literal></expr>;</expr_stmt> <expr_stmt><expr><name><name>months</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <literal type="string">"April"</literal></expr>;</expr_stmt> 
    <expr_stmt><expr><name><name>months</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <literal type="string">"May"</literal></expr>;</expr_stmt> <expr_stmt><expr><name><name>months</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <literal type="string">"June"</literal></expr>;</expr_stmt> <expr_stmt><expr><name><name>months</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <literal type="string">"July"</literal></expr>;</expr_stmt> <expr_stmt><expr><name><name>months</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <literal type="string">"August"</literal></expr>;</expr_stmt> 
    <expr_stmt><expr><name><name>months</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>=</operator> <literal type="string">"September"</literal></expr>;</expr_stmt> <expr_stmt><expr><name><name>months</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <operator>=</operator> <literal type="string">"October"</literal></expr>;</expr_stmt> <expr_stmt><expr><name><name>months</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>=</operator> <literal type="string">"November"</literal></expr>;</expr_stmt> <expr_stmt><expr><name><name>months</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>=</operator> <literal type="string">"December"</literal></expr>;</expr_stmt> 

    <decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>string</name></name></type> <name>current</name></decl>;</decl_stmt> <expr_stmt><expr><call><name>getline</name><argument_list>(<argument><expr><name><name>std</name><operator>::</operator><name>cin</name></name></expr></argument>, <argument><expr><name>current</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>start</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></decl>;</decl_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>p</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>p</name> <operator>&lt;</operator> <name>N</name></expr>;</condition> <incr><expr><name>p</name><operator>++</operator></expr></incr>)</control><block>{<block_content><if_stmt><if>if<condition>(<expr><name><name>months</name><index>[<expr><name>p</name></expr>]</index></name> <operator>==</operator> <name>current</name></expr>)</condition><block>{<block_content><expr_stmt><expr><name>start</name> <operator>=</operator> <name>p</name></expr>;</expr_stmt> <break>break;</break></block_content>}</block></if></if_stmt></block_content>}</block></for>
    <decl_stmt><decl><type><name>int</name></type> <name>wait</name></decl>;</decl_stmt> <expr_stmt><expr><name><name>std</name><operator>::</operator><name>cin</name></name> <operator>&gt;&gt;</operator> <name>wait</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>std</name><operator>::</operator><name>cout</name></name> <operator>&lt;&lt;</operator> <name><name>months</name><index>[<expr><operator>(</operator><name>start</name> <operator>+</operator> <name>wait</name><operator>)</operator> <operator>%</operator> <name>N</name></expr>]</index></name> <operator>&lt;&lt;</operator> <name><name>std</name><operator>::</operator><name>endl</name></name></expr>;</expr_stmt>

    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
