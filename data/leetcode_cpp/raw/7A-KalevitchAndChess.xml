<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="C:\Users\DRACO\PycharmProjects\Data-Science-Term-Project-1\data\leetcode_cpp\raw\7A-KalevitchAndChess.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{<block_content>

    <decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>N</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name><name>array</name><index>[<expr><name>N</name></expr>]</index><index>[<expr><name>N</name></expr>]</index></name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>char</name></type> <name>temp</name></decl>;</decl_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>row</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>row</name> <operator>&lt;</operator> <name>N</name></expr>;</condition> <incr><expr><name>row</name><operator>++</operator></expr></incr>)</control><block>{<block_content>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>col</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>col</name> <operator>&lt;</operator> <name>N</name></expr>;</condition> <incr><expr><name>col</name><operator>++</operator></expr></incr>)</control><block>{<block_content>
            <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%c"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <if_stmt><if>if<condition>(<expr><name>temp</name> <operator>==</operator> <literal type="char">'B'</literal></expr>)</condition><block>{<block_content><expr_stmt><expr><name><name>array</name><index>[<expr><name>row</name></expr>]</index><index>[<expr><name>col</name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <decl_stmt><decl><type><name>int</name></type> <name>total</name><argument_list>(<argument><expr><literal type="number">2</literal> <operator>*</operator> <name>N</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>row</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>row</name> <operator>&lt;</operator> <name>N</name></expr>;</condition> <incr><expr><name>row</name><operator>++</operator></expr></incr>)</control><block>{<block_content>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>col</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>col</name> <operator>&lt;</operator> <name>N</name></expr>;</condition> <incr><expr><name>col</name><operator>++</operator></expr></incr>)</control><block>{<block_content>
            <if_stmt><if>if<condition>(<expr><operator>!</operator><name><name>array</name><index>[<expr><name>row</name></expr>]</index><index>[<expr><name>col</name></expr>]</index></name></expr>)</condition><block>{<block_content><expr_stmt><expr><operator>--</operator><name>total</name></expr>;</expr_stmt> <break>break;</break></block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>

    <for>for<control>(<init><decl><type><name>int</name></type> <name>col</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>col</name> <operator>&lt;</operator> <name>N</name></expr>;</condition> <incr><expr><name>col</name><operator>++</operator></expr></incr>)</control><block>{<block_content>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>row</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>row</name> <operator>&lt;</operator> <name>N</name></expr>;</condition> <incr><expr><name>row</name><operator>++</operator></expr></incr>)</control><block>{<block_content>
            <if_stmt><if>if<condition>(<expr><operator>!</operator><name><name>array</name><index>[<expr><name>row</name></expr>]</index><index>[<expr><name>col</name></expr>]</index></name></expr>)</condition><block>{<block_content><expr_stmt><expr><operator>--</operator><name>total</name></expr>;</expr_stmt> <break>break;</break></block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>

    <if_stmt><if>if<condition>(<expr><name>total</name> <operator>==</operator> <literal type="number">2</literal> <operator>*</operator> <name>N</name></expr>)</condition><block>{<block_content><expr_stmt><expr><name>total</name> <operator>=</operator> <name>N</name></expr>;</expr_stmt></block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>, <argument><expr><name>total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
