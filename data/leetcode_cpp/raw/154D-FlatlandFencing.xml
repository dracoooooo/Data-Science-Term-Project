<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="C:\Users\DRACO\PycharmProjects\Data-Science-Term-Project-1\data\leetcode_cpp\raw\154D-FlatlandFencing.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{<block_content>

    <decl_stmt><decl><type><name>long</name></type> <name>x1</name></decl>, <decl><type ref="prev"/><name>x2</name></decl>, <decl><type ref="prev"/><name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>;</decl_stmt> <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%ld %ld %ld %ld\n"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>x1</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>x2</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>a</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>d</name> <init>= <expr><name>x2</name> <operator>-</operator> <name>x1</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>dir</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if<condition>(<expr><name>a</name> <operator>&lt;=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>b</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition><block>{<block_content><decl_stmt><decl><type><name>long</name></type> <name>temp</name> <init>= <expr><name>a</name></expr></init></decl>;</decl_stmt> <expr_stmt><expr><name>a</name> <operator>=</operator> <operator>-</operator><name>b</name></expr>;</expr_stmt> <expr_stmt><expr><name>b</name> <operator>=</operator> <operator>-</operator><name>temp</name></expr>;</expr_stmt> <expr_stmt><expr><name>d</name> <operator>=</operator> <operator>-</operator><name>d</name></expr>;</expr_stmt> <expr_stmt><expr><name>dir</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block_content>}</block></if></if_stmt>
    <if_stmt><if>if<condition>(<expr><name>a</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition><block>{<block_content> <comment type="line">//a and b have different signs</comment>
        <if_stmt><if>if<condition>(<expr><name><name>d</name> <argument_list type="generic">&lt; <argument><expr><name>a</name> <operator>||</operator> <name>d</name></expr></argument> &gt;</argument_list></name> <name>b</name></expr>)</condition><block>{<block_content><expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><literal type="string">"DRAW"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content>}</block></if> <comment type="line">//First cannot win in the first move;</comment>
        <else>else<block>{<block_content><expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"FIRST\n%ld\n"</literal></expr></argument>, <argument><expr><name>x2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content>}</block></else></if_stmt>  <comment type="line">//First wins in the first move by moving to x2;</comment>
    </block_content>}</block></if>
    <else>else<block>{<block_content> <comment type="line">//a and b are now both positive</comment>
        <if_stmt><if>if<condition>(<expr><name>d</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block>{<block_content><expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><literal type="string">"DRAW"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content>}</block></if>
        <if type="elseif">else if <condition>(<expr><name>d</name> <operator>%</operator> <operator>(</operator><name>a</name> <operator>+</operator> <name>b</name><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block>{<block_content><expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><literal type="string">"SECOND"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content>}</block></if>
        <if type="elseif">else if <condition>(<expr><name>d</name> <operator>%</operator> <operator>(</operator><name>a</name> <operator>+</operator> <name>b</name><operator>)</operator> <operator>&lt;</operator> <name>a</name> <operator>||</operator> <name>d</name> <operator>%</operator> <operator>(</operator><name>a</name> <operator>+</operator> <name>b</name><operator>)</operator> <operator>&gt;</operator> <name>b</name></expr>)</condition><block>{<block_content><expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><literal type="string">"DRAW"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content>}</block></if>
        <else>else<block>{<block_content><expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"FIRST\n%ld\n"</literal></expr></argument>, <argument><expr><name>x2</name> <operator>-</operator> <name>dir</name> <operator>*</operator> <operator>(</operator><name>d</name> <operator>/</operator> <operator>(</operator><name>a</name> <operator>+</operator> <name>b</name><operator>)</operator><operator>)</operator> <operator>*</operator> <operator>(</operator><name>a</name> <operator>+</operator> <name>b</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content>}</block></else></if_stmt>
    </block_content>}</block></else></if_stmt>
    
    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
