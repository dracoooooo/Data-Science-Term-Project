<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\array\array\NumberofSubarrayswithBoundedMaximum.java"><class><specifier>public</specifier> class <name>NumberofSubarrayswithBoundedMaximum</name> <block>{
    <function><type><specifier>public</specifier> <name>int</name></type> <name>numSubarrayBoundedMax</name><parameter_list>(<parameter><decl><type><name><name>int</name><index>[]</index></name></type> <name>A</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>L</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>R</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>int</name></type> <name>n</name> <init>= <expr><name><name>A</name><operator>.</operator><name>length</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>prev</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>res</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>left</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>right</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>right</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>right</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <if_stmt><if>if<condition>(<expr><name><name>A</name><index>[<expr><name>right</name></expr>]</index></name> <operator>&gt;</operator> <name>R</name></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>left</name> <operator>=</operator> <name>right</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
                <expr_stmt><expr><name>prev</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
            </block_content>}</block></if> <else>else <block>{<block_content>
                <if_stmt><if>if<condition>(<expr><name><name>A</name><index>[<expr><name>right</name></expr>]</index></name> <operator>&gt;=</operator> <name>L</name></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name>prev</name> <operator>=</operator> <name>right</name> <operator>-</operator> <name>left</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
                <expr_stmt><expr><name>res</name> <operator>+=</operator> <name>prev</name></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
        <return>return <expr><name>res</name></expr>;</return>
    </block_content>}</block></function>
}</block></class>
</unit>
