<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\array\array\MaximumSumof3NonOverlappingSubarrays.java"><class><specifier>public</specifier> class <name>MaximumSumof3NonOverlappingSubarrays</name> <block>{
    <function><type><specifier>public</specifier> <name><name>int</name><index>[]</index></name></type> <name>maxSumOfThreeSubarrays</name><parameter_list>(<parameter><decl><type><name><name>int</name><index>[]</index></name></type> <name>nums</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>k</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <comment type="line">// W is an array of sums of windows</comment>
        <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>W</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[<expr><name><name>nums</name><operator>.</operator><name>length</name></name> <operator>-</operator> <name>k</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>currSum</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>nums</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <expr_stmt><expr><name>currSum</name> <operator>+=</operator> <name><name>nums</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
            <if_stmt><if>if <condition>(<expr><name>i</name> <operator>&gt;=</operator> <name>k</name></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>currSum</name> <operator>-=</operator> <name><name>nums</name><index>[<expr><name>i</name> <operator>-</operator> <name>k</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt><if>if <condition>(<expr><name>i</name> <operator>&gt;=</operator> <name>k</name> <operator>-</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name><name>W</name><index>[<expr><name>i</name> <operator>-</operator> <name>k</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>currSum</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>

        <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>left</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[<expr><name><name>W</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>best</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>W</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name><name>W</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&gt;</operator> <name><name>W</name><index>[<expr><name>best</name></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>best</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <expr_stmt><expr><name><name>left</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>best</name></expr>;</expr_stmt>
        </block_content>}</block></for>

        <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>right</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[<expr><name><name>W</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>best</name> <operator>=</operator> <name><name>W</name><operator>.</operator><name>length</name></name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name><name>W</name><operator>.</operator><name>length</name></name> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name><name>W</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&gt;=</operator> <name><name>W</name><index>[<expr><name>best</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>best</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt><expr><name><name>right</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>best</name></expr>;</expr_stmt>
        </block_content>}</block></for>
        
        <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>ans</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[]</index></name><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><name>k</name></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name><name>W</name><operator>.</operator><name>length</name></name> <operator>-</operator> <name>k</name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name><name>left</name><index>[<expr><name>j</name> <operator>-</operator> <name>k</name></expr>]</index></name></expr></init></decl>, <decl><type ref="prev"/><name>l</name> <init>= <expr><name><name>right</name><index>[<expr><name>j</name> <operator>+</operator> <name>k</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><name><name>ans</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal> <operator>||</operator> <name><name>W</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+</operator> <name><name>W</name><index>[<expr><name>j</name></expr>]</index></name> <operator>+</operator> <name><name>W</name><index>[<expr><name>l</name></expr>]</index></name> <operator>&gt;</operator> <name><name>W</name><index>[<expr><name><name>ans</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name> <operator>+</operator> <name><name>W</name><index>[<expr><name><name>ans</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>]</index></name> <operator>+</operator> <name><name>W</name><index>[<expr><name><name>ans</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>]</index></name></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name><name>ans</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>ans</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>j</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>ans</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>l</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <return>return <expr><name>ans</name></expr>;</return>
    </block_content>}</block></function>
}</block></class>
</unit>
