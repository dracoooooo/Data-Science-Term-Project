<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\array\array\MaxAreaOfIsland.java"><class><specifier>public</specifier> class <name>MaxAreaOfIsland</name> <block>{
    <decl_stmt><decl><type><name><name>int</name><index>[]</index><index>[]</index></name></type> <name>grid</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>boolean</name><index>[]</index><index>[]</index></name></type> <name>seen</name></decl>;</decl_stmt>

    <function><type><specifier>public</specifier> <name>int</name></type> <name>area</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>r</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>c</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>r</name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>||</operator> <name>r</name> <operator>&gt;=</operator> <name><name>grid</name><operator>.</operator><name>length</name></name> <operator>||</operator> <name>c</name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>||</operator> <name>c</name> <operator>&gt;=</operator> <name><name>grid</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>length</name> <operator>||</operator>
                <name><name>seen</name><index>[<expr><name>r</name></expr>]</index><index>[<expr><name>c</name></expr>]</index></name> <operator>||</operator> <name><name>grid</name><index>[<expr><name>r</name></expr>]</index><index>[<expr><name>c</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
            <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt><expr><name><name>seen</name><index>[<expr><name>r</name></expr>]</index><index>[<expr><name>c</name></expr>]</index></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
        <return>return <expr><operator>(</operator><literal type="number">1</literal> <operator>+</operator> <call><name>area</name><argument_list>(<argument><expr><name>r</name><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>area</name><argument_list>(<argument><expr><name>r</name><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call>
                  <operator>+</operator> <call><name>area</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>c</name><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>area</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>c</name><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>int</name></type> <name>maxAreaOfIsland</name><parameter_list>(<parameter><decl><type><name><name>int</name><index>[]</index><index>[]</index></name></type> <name>grid</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>grid</name></name> <operator>=</operator> <name>grid</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>seen</name> <operator>=</operator> <operator>new</operator> <name><name>boolean</name><index>[<expr><name><name>grid</name><operator>.</operator><name>length</name></name></expr>]</index><index>[<expr><name><name>grid</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>length</name></expr>]</index></name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>ans</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>r</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>r</name> <operator>&lt;</operator> <name><name>grid</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>r</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>c</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>c</name> <operator>&lt;</operator> <name><name>grid</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>length</name></expr>;</condition> <incr><expr><name>c</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                <expr_stmt><expr><name>ans</name> <operator>=</operator> <call><name><name>Math</name><operator>.</operator><name>max</name></name><argument_list>(<argument><expr><name>ans</name></expr></argument>, <argument><expr><call><name>area</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
        </block_content>}</block></for>
        <return>return <expr><name>ans</name></expr>;</return>
    </block_content>}</block></function>
}</block></class>
</unit>
