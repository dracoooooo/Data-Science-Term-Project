<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\array\array\LongestContinuousIncreasingSubsequence.java"><class><specifier>public</specifier> class <name>LongestContinuousIncreasingSubsequence</name> <block>{
    <function><type><specifier>public</specifier> <name>int</name></type> <name>findLengthOfLCIS</name><parameter_list>(<parameter><decl><type><name><name>int</name><index>[]</index></name></type> <name>nums</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>int</name></type> <name>n</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>max</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name><name>nums</name><operator>.</operator><name>length</name></name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{<block_content>
            <decl_stmt><decl><type><name>int</name></type> <name>next</name><init>=<expr><ternary><condition><expr><operator>(</operator><name>i</name><operator>==</operator><name><name>nums</name><operator>.</operator><name>length</name></name><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>?</condition><then><expr><name><name>Integer</name><operator>.</operator><name>MAX_VALUE</name></name></expr></then><else>:<expr><name><name>nums</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr></else></ternary></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if<condition>(<expr><name><name>nums</name><index>[<expr><name>i</name></expr>]</index></name><operator>&lt;</operator><name>next</name></expr>)</condition><block>{<block_content>
                <expr_stmt><expr><name>n</name><operator>+=</operator><literal type="number">1</literal></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else>else<block>{<block_content>
                <expr_stmt><expr><name>n</name><operator>+=</operator><literal type="number">1</literal></expr>;</expr_stmt>
                <if_stmt><if>if<condition>(<expr><name>n</name><operator>&gt;</operator><name>max</name></expr>)</condition><block>{<block_content>
                    <expr_stmt><expr><name>max</name><operator>=</operator><name>n</name></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
                <expr_stmt><expr><name>n</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
        <return>return <expr><ternary><condition><expr><operator>(</operator><name>max</name><operator>&gt;</operator><name>n</name><operator>)</operator></expr>?</condition><then><expr><name>max</name></expr></then><else>:<expr><name>n</name></expr></else></ternary></expr>;</return>
    </block_content>}</block></function>
}</block></class>
</unit>
