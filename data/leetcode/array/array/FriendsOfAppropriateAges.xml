<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\array\array\FriendsOfAppropriateAges.java"><class><specifier>public</specifier> class <name>FriendsOfAppropriateAges</name> <block>{
    <function><type><specifier>public</specifier> <name>int</name></type> <name>numFriendRequests</name><parameter_list>(<parameter><decl><type><name><name>int</name><index>[]</index></name></type> <name>ages</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>count</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[<expr><literal type="number">121</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>age</name><range>: <expr><name>ages</name></expr></range></decl></init>)</control><block type="pseudo"><block_content> <expr_stmt><expr><name><name>count</name><index>[<expr><name>age</name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt></block_content></block></for>

        <decl_stmt><decl><type><name>int</name></type> <name>ans</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>ageA</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>ageA</name> <operator>&lt;=</operator> <literal type="number">120</literal></expr>;</condition> <incr><expr><name>ageA</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>int</name></type> <name>countA</name> <init>= <expr><name><name>count</name><index>[<expr><name>ageA</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>ageB</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>ageB</name> <operator>&lt;=</operator> <literal type="number">120</literal></expr>;</condition> <incr><expr><name>ageB</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                <decl_stmt><decl><type><name>int</name></type> <name>countB</name> <init>= <expr><name><name>count</name><index>[<expr><name>ageB</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name>ageA</name> <operator>*</operator> <literal type="number">0.5</literal> <operator>+</operator> <literal type="number">7</literal> <operator>&gt;=</operator> <name>ageB</name></expr>)</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>
                <if_stmt><if>if <condition>(<expr><name>ageA</name> <operator>&lt;</operator> <name>ageB</name></expr>)</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>
                <if_stmt><if>if <condition>(<expr><name>ageA</name> <operator>&lt;</operator> <literal type="number">100</literal> <operator>&amp;&amp;</operator> <literal type="number">100</literal> <operator>&lt;</operator> <name>ageB</name></expr>)</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>
                <expr_stmt><expr><name>ans</name> <operator>+=</operator> <name>countA</name> <operator>*</operator> <name>countB</name></expr>;</expr_stmt>
                <if_stmt><if>if <condition>(<expr><name>ageA</name> <operator>==</operator> <name>ageB</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>ans</name> <operator>-=</operator> <name>countA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></for>

        <return>return <expr><name>ans</name></expr>;</return>
    </block_content>}</block></function>
}</block></class>
</unit>
