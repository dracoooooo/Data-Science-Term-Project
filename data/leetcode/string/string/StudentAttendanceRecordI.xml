<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\string\string\StudentAttendanceRecordI.java"><package>package <name>string</name>;</package>

<comment type="block" format="javadoc">/**
 * Created by gouthamvidyapradhan on 10/05/2019 You are given a string representing an attendance
 * record for a student. The record only contains the following three characters: 'A' : Absent. 'L'
 * : Late. 'P' : Present. A student could be rewarded if his attendance record doesn't contain more
 * than one 'A' (absent) or more than two continuous 'L' (late).
 *
 * &lt;p&gt;You need to return whether the student could be rewarded according to his attendance record.
 *
 * &lt;p&gt;Example 1: Input: "PPALLP" Output: True Example 2: Input: "PPALLL" Output: False
 *
 * &lt;p&gt;Solution O(N) Simple linear check
 */</comment>
<class><specifier>public</specifier> class <name>StudentAttendanceRecordI</name> <block>{
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>args</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>

  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>checkRecord</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>s</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>count</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>c</name> <range>: <expr><call><name><name>s</name><operator>.</operator><name>toCharArray</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'A'</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>count</name><operator>++</operator></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><name>count</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt><if>if <condition>(<expr><call><name><name>s</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><literal type="string">"LLL"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
  </block_content>}</block></function>
}</block></class>
</unit>
