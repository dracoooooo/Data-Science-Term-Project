<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\sort\LargestNumber.java"><class><specifier>public</specifier> class <name>LargestNumber</name> <block>{
    <class><specifier>private</specifier> class <name>LargerNumberComparator</name> <super_list><implements>implements <super><name><name>Comparator</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></super></implements></super_list> <block>{
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>compare</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <decl_stmt><decl><type><name>String</name></type> <name>order1</name> <init>= <expr><name>a</name> <operator>+</operator> <name>b</name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>order2</name> <init>= <expr><name>b</name> <operator>+</operator> <name>a</name></expr></init></decl>;</decl_stmt>
           <return>return <expr><call><name><name>order2</name><operator>.</operator><name>compareTo</name></name><argument_list>(<argument><expr><name>order1</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></function>
    }</block></class>

    <function><type><specifier>public</specifier> <name>String</name></type> <name>largestNumber</name><parameter_list>(<parameter><decl><type><name><name>int</name><index>[]</index></name></type> <name>nums</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <comment type="line">// Get input integers as strings.</comment>
        <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>asStrs</name> <init>= <expr><operator>new</operator> <name><name>String</name><index>[<expr><name><name>nums</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>nums</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <expr_stmt><expr><name><name>asStrs</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name><name>nums</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>

        <comment type="line">// Sort strings according to custom comparator.</comment>
        <expr_stmt><expr><call><name><name>Arrays</name><operator>.</operator><name>sort</name></name><argument_list>(<argument><expr><name>asStrs</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>LargerNumberComparator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// If, after being sorted, the largest number is `0`, the entire number</comment>
        <comment type="line">// is zero.</comment>
        <if_stmt><if>if <condition>(<expr><name><name>asStrs</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">"0"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <return>return <expr><literal type="string">"0"</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>

        <comment type="line">// Build largest number from sorted array.</comment>
        <decl_stmt><decl><type><name>String</name></type> <name>largestNumberStr</name> <init>= <expr><operator>new</operator> <call><name>String</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>String</name></type> <name>numAsStr</name> <range>: <expr><name>asStrs</name></expr></range></decl></init>)</control> <block>{<block_content>
            <expr_stmt><expr><name>largestNumberStr</name> <operator>+=</operator> <name>numAsStr</name></expr>;</expr_stmt>
        </block_content>}</block></for>

        <return>return <expr><name>largestNumberStr</name></expr>;</return>
    </block_content>}</block></function>
}</block></class>
</unit>
