<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\sort\ReorganizeString.java"><class><specifier>public</specifier> class <name>ReorganizeString</name> <block>{
    <function><type><specifier>public</specifier> <name>String</name></type> <name>reorganizeString</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>S</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>int</name></type> <name>N</name> <init>= <expr><call><name><name>S</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>counts</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[<expr><literal type="number">26</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>char</name></type> <name>c</name><range>: <expr><call><name><name>S</name><operator>.</operator><name>toCharArray</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control><block type="pseudo"><block_content> <expr_stmt><expr><name><name>counts</name><index>[<expr><name>c</name><operator>-</operator><literal type="char">'a'</literal></expr>]</index></name> <operator>+=</operator> <literal type="number">100</literal></expr>;</expr_stmt></block_content></block></for>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">26</literal></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block type="pseudo"><block_content> <expr_stmt><expr><name><name>counts</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <name>i</name></expr>;</expr_stmt></block_content></block></for>
        <comment type="line">//Encoded counts[i] = 100*(actual count) + (i)</comment>
        <expr_stmt><expr><call><name><name>Arrays</name><operator>.</operator><name>sort</name></name><argument_list>(<argument><expr><name>counts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name><name>char</name><index>[]</index></name></type> <name>ans</name> <init>= <expr><operator>new</operator> <name><name>char</name><index>[<expr><name>N</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>t</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>code</name><range>: <expr><name>counts</name></expr></range></decl></init>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>int</name></type> <name>ct</name> <init>= <expr><name>code</name> <operator>/</operator> <literal type="number">100</literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>char</name></type> <name>ch</name> <init>= <expr><operator>(</operator><name>char</name><operator>)</operator> <operator>(</operator><literal type="char">'a'</literal> <operator>+</operator> <operator>(</operator><name>code</name> <operator>%</operator> <literal type="number">100</literal><operator>)</operator><operator>)</operator></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><name>ct</name> <operator>&gt;</operator> <operator>(</operator><name>N</name><operator>+</operator><literal type="number">1</literal><operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="string">""</literal></expr>;</return></block_content></block></if></if_stmt>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>ct</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><name>t</name> <operator>&gt;=</operator> <name>N</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>t</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <expr_stmt><expr><name><name>ans</name><index>[<expr><name>t</name></expr>]</index></name> <operator>=</operator> <name>ch</name></expr>;</expr_stmt>
                <expr_stmt><expr><name>t</name> <operator>+=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
            </block_content>}</block></for>
        </block_content>}</block></for>

        <return>return <expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
}</block></class>
</unit>
