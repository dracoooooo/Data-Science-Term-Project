<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\array\array\MagneticForceBetweenTwoBalls.java"><class><specifier>public</specifier> class <name>MagneticForceBetweenTwoBalls</name> <block>{
    <function><type><specifier>public</specifier> <name>int</name></type> <name>maxDistance</name><parameter_list>(<parameter><decl><type><name><name>int</name><index>[]</index></name></type> <name>p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>k</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Arrays</name><operator>.</operator><name>sort</name></name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>lo</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt><decl_stmt><decl><type><name>int</name></type> <name>hi</name><init>=<expr><name><name>p</name><index>[<expr><name><name>p</name><operator>.</operator><name>length</name></name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>-</operator><name><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>mid</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>ans</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <while>while<condition>(<expr><name>hi</name><operator>-</operator><name>lo</name><operator>&gt;</operator><literal type="number">1</literal></expr>)</condition><block>{<block_content>
            <expr_stmt><expr><name>mid</name><operator>=</operator><name>lo</name><operator>+</operator><operator>(</operator><name>hi</name><operator>-</operator><name>lo</name><operator>)</operator><operator>/</operator><literal type="number">2</literal></expr>;</expr_stmt>
            <if_stmt><if>if<condition>(<expr><call><name>isPos</name><argument_list>(<argument><expr><name>mid</name></expr></argument>,<argument><expr><name>p</name></expr></argument>,<argument><expr><name>k</name></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
                <expr_stmt><expr><name>ans</name><operator>=</operator><call><name><name>Math</name><operator>.</operator><name>max</name></name><argument_list>(<argument><expr><name>ans</name></expr></argument>,<argument><expr><name>mid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>lo</name><operator>=</operator><name>mid</name></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else>else<block type="pseudo"><block_content>
                <expr_stmt><expr><name>hi</name><operator>=</operator><name>mid</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
        </block_content>}</block></while>
        <if_stmt><if>if<condition>(<expr><call><name>isPos</name><argument_list>(<argument><expr><name>hi</name></expr></argument>,<argument><expr><name>p</name></expr></argument>,<argument><expr><name>k</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
            <expr_stmt><expr><name>ans</name><operator>=</operator><name>hi</name></expr>;</expr_stmt></block_content></block></if>
        <if type="elseif">else if<condition>(<expr><call><name>isPos</name><argument_list>(<argument><expr><name>lo</name></expr></argument>,<argument><expr><name>p</name></expr></argument>,<argument><expr><name>k</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
            <expr_stmt><expr><name>ans</name><operator>=</operator><name>lo</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <return>return <expr><name>ans</name></expr>;</return>
    </block_content>}</block></function>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>boolean</name></type> <name>isPos</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>dis</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name><name>p</name><index>[]</index></name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>balls</name></decl></parameter>)</parameter_list><block>{<block_content>
        <decl_stmt><decl><type><name>int</name></type> <name>bCount</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt><decl_stmt><decl><type><name>int</name></type> <name>lstPlacem</name><init>=<expr><name><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>curDis</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name><name>p</name><operator>.</operator><name>length</name></name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{<block_content>
            <expr_stmt><expr><name>curDis</name><operator>=</operator><name><name>p</name><index>[<expr><name>i</name></expr>]</index></name><operator>-</operator><name>lstPlacem</name></expr>;</expr_stmt>
            <if_stmt><if>if<condition>(<expr><name>curDis</name><operator>&gt;=</operator><name>dis</name></expr>)</condition><block>{<block_content>
                <expr_stmt><expr><name>curDis</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
                <expr_stmt><expr><name>bCount</name><operator>++</operator></expr>;</expr_stmt>
                <expr_stmt><expr><name>lstPlacem</name><operator>=</operator><name><name>p</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <if_stmt><if>if<condition>(<expr><name>balls</name><operator>&lt;=</operator><name>bCount</name></expr>)</condition><block>{<block_content>
            <return>return <expr><literal type="boolean">true</literal></expr>;</return>
        </block_content>}</block></if>
        <else>else<block type="pseudo"><block_content>
            <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></else></if_stmt>
    </block_content>}</block></function>
}</block></class>
</unit>
