<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\sort\SortIntegersByThePowerValue.java"><class><specifier>public</specifier> class <name>SortIntegersByThePowerValue</name> <block>{
    <function><type><specifier>public</specifier> <name>int</name></type> <name>getKth</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>lo</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>hi</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>k</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name><name>Queue</name><argument_list type="generic">&lt;<argument><name><name>int</name><index>[]</index></name></argument>&gt;</argument_list></name></type> <name>queue</name> <init>= <expr><operator>new</operator> <call><name><name>PriorityQueue</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><ternary><condition><expr><operator>(</operator><name>a</name>,<name>b</name><operator>)</operator> <operator>-&gt;</operator> <operator>(</operator><name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>!=</operator> <name><name>b</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>)</operator></expr> ?</condition><then> <expr><name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>-</operator><name><name>b</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> </then><else>: <expr><name><name>a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>-</operator><name><name>b</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></else></ternary></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><name>lo</name></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>hi</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{<block_content>
            <decl_stmt><decl><type><name>int</name></type> <name>curr</name> <init>= <expr><name>i</name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>count</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
            <while>while<condition>(<expr><name>curr</name> <operator>!=</operator> <literal type="number">1</literal></expr>)</condition><block>{<block_content>
				  <expr_stmt><expr><name>curr</name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name>curr</name><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">0</literal><operator>)</operator></expr> ?</condition><then> <expr><name>curr</name><operator>/</operator><literal type="number">2</literal></expr> </then><else>: <expr><name>curr</name><operator>*</operator><literal type="number">3</literal><operator>+</operator><literal type="number">1</literal></expr></else></ternary></expr>;</expr_stmt>
                <expr_stmt><expr><name>count</name><operator>++</operator></expr>;</expr_stmt>
            </block_content>}</block></while>
            <expr_stmt><expr><call><name><name>queue</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>int</name><index>[]</index></name><block>{<expr><name>i</name></expr>,<expr><name>count</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>k</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{<block_content>
            <expr_stmt><expr><call><name><name>queue</name><operator>.</operator><name>remove</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <return>return <expr><call><name><name>queue</name><operator>.</operator><name>poll</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index></expr>;</return>
    </block_content>}</block></function>
}</block></class>
</unit>
