<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\raw\solutions\_529.java"><package>package <name><name>com</name><operator>.</operator><name>fishercoder</name><operator>.</operator><name>solutions</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Queue</name></name>;</import>

<class><specifier>public</specifier> class <name>_529</name> <block>{

    <class><specifier>public</specifier> <specifier>static</specifier> class <name>Solution1</name> <block>{
        <function><type><specifier>public</specifier> <name><name>char</name><index>[]</index><index>[]</index></name></type> <name>updateBoard</name><parameter_list>(<parameter><decl><type><name><name>char</name><index>[]</index><index>[]</index></name></type> <name>board</name></decl></parameter>, <parameter><decl><type><name><name>int</name><index>[]</index></name></type> <name>click</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <decl_stmt><decl><type><name>int</name></type> <name>m</name> <init>= <expr><name><name>board</name><operator>.</operator><name>length</name></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>n</name> <init>= <expr><name><name>board</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>length</name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name><name>Queue</name><argument_list type="generic">&lt;<argument><name><name>int</name><index>[]</index></name></argument>&gt;</argument_list></name></type> <name>queue</name> <init>= <expr><operator>new</operator> <call><name>LinkedList</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>queue</name><operator>.</operator><name>offer</name></name><argument_list>(<argument><expr><name>click</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <while>while <condition>(<expr><operator>!</operator><call><name><name>queue</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>curr</name> <init>= <expr><call><name><name>queue</name><operator>.</operator><name>poll</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>int</name></type> <name>currRow</name> <init>= <expr><name><name>curr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>int</name></type> <name>currCol</name> <init>= <expr><name><name>curr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name><name>board</name><index>[<expr><name>currRow</name></expr>]</index><index>[<expr><name>currCol</name></expr>]</index></name> <operator>==</operator> <literal type="char">'M'</literal></expr>)</condition> <block>{<block_content>
                    <comment type="block" format="javadoc">/**This also covers the corner case: when click[] happens to be on a mine, then it'll exit directly.
                     * Otherwise, we'll just continue and mark this cell to be 'M' and keep processing all 'E' cells in the queue.*/</comment>
                    <expr_stmt><expr><name><name>board</name><index>[<expr><name>currRow</name></expr>]</index><index>[<expr><name>currCol</name></expr>]</index></name> <operator>=</operator> <literal type="char">'X'</literal></expr>;</expr_stmt>
                </block_content>}</block></if> <else>else <block>{<block_content>
                    <comment type="block" format="javadoc">/**scan all four directions of this curr cell, count all mines, this includes 'X' and 'M' */</comment>
                    <decl_stmt><decl><type><name>int</name></type> <name>count</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
                    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">2</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                        <for>for <control>(<init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <literal type="number">2</literal></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                            <if_stmt><if>if <condition>(<expr><name>i</name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>j</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                                <continue>continue;</continue>
                            </block_content>}</block></if></if_stmt>
                            <decl_stmt><decl><type><name>int</name></type> <name>nextRow</name> <init>= <expr><name>currRow</name> <operator>+</operator> <name>i</name></expr></init></decl>;</decl_stmt>
                            <decl_stmt><decl><type><name>int</name></type> <name>nextCol</name> <init>= <expr><name>currCol</name> <operator>+</operator> <name>j</name></expr></init></decl>;</decl_stmt>
                            <if_stmt><if>if <condition>(<expr><name>nextRow</name> <operator>&gt;=</operator> <name>m</name> <operator>||</operator> <name>nextRow</name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>||</operator> <name>nextCol</name> <operator>&gt;=</operator> <name>n</name> <operator>||</operator> <name>nextCol</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                                <continue>continue;</continue>
                            </block_content>}</block></if></if_stmt>
                            <if_stmt><if>if <condition>(<expr><name><name>board</name><index>[<expr><name>nextRow</name></expr>]</index><index>[<expr><name>nextCol</name></expr>]</index></name> <operator>==</operator> <literal type="char">'M'</literal> <operator>||</operator> <name><name>board</name><index>[<expr><name>nextRow</name></expr>]</index><index>[<expr><name>nextCol</name></expr>]</index></name> <operator>==</operator> <literal type="char">'X'</literal></expr>)</condition> <block>{<block_content>
                                <expr_stmt><expr><name>count</name><operator>++</operator></expr>;</expr_stmt>
                            </block_content>}</block></if></if_stmt>
                        </block_content>}</block></for>
                    </block_content>}</block></for>

                    <if_stmt><if>if <condition>(<expr><name>count</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                        <comment type="block" format="javadoc">/**There are mines around this cell, so update it with the number of mines*/</comment>
                        <expr_stmt><expr><name><name>board</name><index>[<expr><name>currRow</name></expr>]</index><index>[<expr><name>currCol</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>char</name><operator>)</operator> <operator>(</operator><name>count</name> <operator>+</operator> <literal type="char">'0'</literal><operator>)</operator></expr>;</expr_stmt>
                    </block_content>}</block></if> <else>else <block>{<block_content>
                        <comment type="block" format="javadoc">/**There is no mines around this cell, so update it to be 'B'*/</comment>
                        <expr_stmt><expr><name><name>board</name><index>[<expr><name>currRow</name></expr>]</index><index>[<expr><name>currCol</name></expr>]</index></name> <operator>=</operator> <literal type="char">'B'</literal></expr>;</expr_stmt>

                        <comment type="block" format="javadoc">/**then we'll also check all of its four surrounding cells, if it's 'E'. we'll also update it to be 'B' and offer it into the queue*/</comment>
                        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">2</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                            <for>for <control>(<init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <literal type="number">2</literal></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                                <if_stmt><if>if <condition>(<expr><name>i</name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>j</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                                    <continue>continue;</continue>
                                </block_content>}</block></if></if_stmt>
                                <decl_stmt><decl><type><name>int</name></type> <name>nextRow</name> <init>= <expr><name>currRow</name> <operator>+</operator> <name>i</name></expr></init></decl>;</decl_stmt>
                                <decl_stmt><decl><type><name>int</name></type> <name>nextCol</name> <init>= <expr><name>currCol</name> <operator>+</operator> <name>j</name></expr></init></decl>;</decl_stmt>
                                <if_stmt><if>if <condition>(<expr><name>nextRow</name> <operator>&gt;=</operator> <name>m</name> <operator>||</operator> <name>nextRow</name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>||</operator> <name>nextCol</name> <operator>&gt;=</operator> <name>n</name> <operator>||</operator> <name>nextCol</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                                    <continue>continue;</continue>
                                </block_content>}</block></if></if_stmt>
                                <if_stmt><if>if <condition>(<expr><name><name>board</name><index>[<expr><name>nextRow</name></expr>]</index><index>[<expr><name>nextCol</name></expr>]</index></name> <operator>==</operator> <literal type="char">'E'</literal></expr>)</condition> <block>{<block_content>
                                    <comment type="block" format="javadoc">/**we offer 'E' cells into the queue*/</comment>
                                    <expr_stmt><expr><call><name><name>queue</name><operator>.</operator><name>offer</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>int</name><index>[]</index></name><block>{<expr><name>nextRow</name></expr>, <expr><name>nextCol</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <comment type="block" format="javadoc">/**then update this cell to be 'B' */</comment>
                                    <expr_stmt><expr><name><name>board</name><index>[<expr><name>nextRow</name></expr>]</index><index>[<expr><name>nextCol</name></expr>]</index></name> <operator>=</operator> <literal type="char">'B'</literal></expr>;</expr_stmt>
                                </block_content>}</block></if></if_stmt>
                            </block_content>}</block></for>
                        </block_content>}</block></for>
                    </block_content>}</block></else></if_stmt>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></while>
            <return>return <expr><name>board</name></expr>;</return>
        </block_content>}</block></function>
    }</block></class>
}</block></class>
</unit>
