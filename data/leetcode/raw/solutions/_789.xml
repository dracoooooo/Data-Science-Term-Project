<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\raw\solutions\_789.java"><package>package <name><name>com</name><operator>.</operator><name>fishercoder</name><operator>.</operator><name>solutions</name></name>;</package>

<class><specifier>public</specifier> class <name>_789</name> <block>{

    <class><specifier>public</specifier> <specifier>static</specifier> class <name>Solution</name> <block>{
        <function><type><specifier>public</specifier> <name>boolean</name></type> <name>escapeGhosts</name><parameter_list>(<parameter><decl><type><name><name>int</name><index>[]</index><index>[]</index></name></type> <name>ghosts</name></decl></parameter>, <parameter><decl><type><name><name>int</name><index>[]</index></name></type> <name>target</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>currPos</name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>selfDist</name> <init>= <expr><call><name>getDist</name><argument_list>(<argument><expr><name>currPos</name></expr></argument>, <argument><expr><name>target</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <for>for <control>(<init><decl><type><name><name>int</name><index>[]</index></name></type> <name>ghost</name> <range>: <expr><name>ghosts</name></expr></range></decl></init>)</control> <block>{<block_content>
                <decl_stmt><decl><type><name>int</name></type> <name>ghostDist</name> <init>= <expr><call><name>getDist</name><argument_list>(<argument><expr><name>ghost</name></expr></argument>, <argument><expr><name>target</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name>ghostDist</name> <operator>&lt;=</operator> <name>selfDist</name></expr>)</condition> <block>{<block_content>
                    <return>return <expr><literal type="boolean">false</literal></expr>;</return>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <return>return <expr><literal type="boolean">true</literal></expr>;</return>
        </block_content>}</block></function>

        <function><type><specifier>private</specifier> <name>int</name></type> <name>getDist</name><parameter_list>(<parameter><decl><type><name><name>int</name><index>[]</index></name></type> <name>p1</name></decl></parameter>, <parameter><decl><type><name><name>int</name><index>[]</index></name></type> <name>p2</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <return>return <expr><call><name><name>Math</name><operator>.</operator><name>abs</name></name><argument_list>(<argument><expr><name><name>p1</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>-</operator> <name><name>p2</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>+</operator> <call><name><name>Math</name><operator>.</operator><name>abs</name></name><argument_list>(<argument><expr><name><name>p1</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>-</operator> <name><name>p2</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></function>
    }</block></class>
}</block></class>
</unit>
