<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\raw\solutions\_264.java"><package>package <name><name>com</name><operator>.</operator><name>fishercoder</name><operator>.</operator><name>solutions</name></name>;</package>

<class><specifier>public</specifier> class <name>_264</name> <block>{

    <class><specifier>public</specifier> <specifier>static</specifier> class <name>Solution1</name> <block>{
        <comment type="block" format="javadoc">/**
         * credit: https://discuss.leetcode.com/topic/21791/o-n-java-solution
         */</comment>
        <function><type><specifier>public</specifier> <name>int</name></type> <name>nthUglyNumber</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>ugly</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[<expr><name>n</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name>ugly</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>index2</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>index3</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>index5</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>factor2</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>factor3</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>factor5</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>;</decl_stmt>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                <decl_stmt><decl><type><name>int</name></type> <name>min</name> <init>= <expr><call><name><name>Math</name><operator>.</operator><name>min</name></name><argument_list>(<argument><expr><call><name><name>Math</name><operator>.</operator><name>min</name></name><argument_list>(<argument><expr><name>factor2</name></expr></argument>, <argument><expr><name>factor3</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>factor5</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name>ugly</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>min</name></expr>;</expr_stmt>
                <if_stmt><if>if <condition>(<expr><name>factor2</name> <operator>==</operator> <name>min</name></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name>factor2</name> <operator>=</operator> <literal type="number">2</literal> <operator>*</operator> <name><name>ugly</name><index>[<expr><operator>++</operator><name>index2</name></expr>]</index></name></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
                <if_stmt><if>if <condition>(<expr><name>factor3</name> <operator>==</operator> <name>min</name></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name>factor3</name> <operator>=</operator> <literal type="number">3</literal> <operator>*</operator> <name><name>ugly</name><index>[<expr><operator>++</operator><name>index3</name></expr>]</index></name></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
                <if_stmt><if>if <condition>(<expr><name>factor5</name> <operator>==</operator> <name>min</name></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name>factor5</name> <operator>=</operator> <literal type="number">5</literal> <operator>*</operator> <name><name>ugly</name><index>[<expr><operator>++</operator><name>index5</name></expr>]</index></name></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <return>return <expr><name><name>ugly</name><index>[<expr><name>n</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</return>
        </block_content>}</block></function>
    }</block></class>
}</block></class>
</unit>
