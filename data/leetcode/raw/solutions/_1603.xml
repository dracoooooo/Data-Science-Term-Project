<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\raw\solutions\_1603.java"><package>package <name><name>com</name><operator>.</operator><name>fishercoder</name><operator>.</operator><name>solutions</name></name>;</package>

<class><specifier>public</specifier> class <name>_1603</name> <block>{
    <class><specifier>public</specifier> <specifier>static</specifier> class <name>Solution1</name> <block>{
        <class>class <name>ParkingSystem</name> <block>{
            <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>slots</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <constructor><specifier>public</specifier> <name>ParkingSystem</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>big</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>medium</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>small</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <expr_stmt><expr><name><name>slots</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>big</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>slots</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>medium</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>slots</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>small</name></expr>;</expr_stmt>
            </block_content>}</block></constructor>

            <function><type><specifier>public</specifier> <name>boolean</name></type> <name>addCar</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>carType</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><name>carType</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
                    <if_stmt><if>if <condition>(<expr><name><name>slots</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><name><name>slots</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>--</operator></expr>;</expr_stmt>
                        <return>return <expr><literal type="boolean">true</literal></expr>;</return>
                    </block_content>}</block></if> <else>else <block>{<block_content>
                        <return>return <expr><literal type="boolean">false</literal></expr>;</return>
                    </block_content>}</block></else></if_stmt>
                </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>carType</name> <operator>==</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>
                    <if_stmt><if>if <condition>(<expr><name><name>slots</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><name><name>slots</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>--</operator></expr>;</expr_stmt>
                        <return>return <expr><literal type="boolean">true</literal></expr>;</return>
                    </block_content>}</block></if> <else>else <block>{<block_content>
                        <return>return <expr><literal type="boolean">false</literal></expr>;</return>
                    </block_content>}</block></else></if_stmt>
                </block_content>}</block></if> <else>else <block>{<block_content>
                    <if_stmt><if>if <condition>(<expr><name><name>slots</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><name><name>slots</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>--</operator></expr>;</expr_stmt>
                        <return>return <expr><literal type="boolean">true</literal></expr>;</return>
                    </block_content>}</block></if> <else>else <block>{<block_content>
                        <return>return <expr><literal type="boolean">false</literal></expr>;</return>
                    </block_content>}</block></else></if_stmt>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></function>
        }</block></class>
    }</block></class>
}</block></class>
</unit>
