<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\raw\solutions\_328.java"><package>package <name><name>com</name><operator>.</operator><name>fishercoder</name><operator>.</operator><name>solutions</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>fishercoder</name><operator>.</operator><name>common</name><operator>.</operator><name>classes</name><operator>.</operator><name>ListNode</name></name>;</import>

<class><specifier>public</specifier> class <name>_328</name> <block>{

    <class><specifier>public</specifier> <specifier>static</specifier> class <name>Solution1</name> <block>{
        <function><type><specifier>public</specifier> <name>ListNode</name></type> <name>oddEvenList</name><parameter_list>(<parameter><decl><type><name>ListNode</name></type> <name>head</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>head</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name>ListNode</name></type> <name>odd</name> <init>= <expr><name>head</name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>ListNode</name></type> <name>even</name> <init>= <expr><name><name>head</name><operator>.</operator><name>next</name></name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>ListNode</name></type> <name>evenHead</name> <init>= <expr><name>even</name></expr></init></decl>;</decl_stmt>

                <while>while <condition>(<expr><name>even</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name><name>even</name><operator>.</operator><name>next</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name><name>odd</name><operator>.</operator><name>next</name></name> <operator>=</operator> <name><name>odd</name><operator>.</operator><name>next</name><operator>.</operator><name>next</name></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name><name>even</name><operator>.</operator><name>next</name></name> <operator>=</operator> <name><name>even</name><operator>.</operator><name>next</name><operator>.</operator><name>next</name></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name>odd</name> <operator>=</operator> <name><name>odd</name><operator>.</operator><name>next</name></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name>even</name> <operator>=</operator> <name><name>even</name><operator>.</operator><name>next</name></name></expr>;</expr_stmt>
                </block_content>}</block></while>

                <expr_stmt><expr><name><name>odd</name><operator>.</operator><name>next</name></name> <operator>=</operator> <name>evenHead</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <return>return <expr><name>head</name></expr>;</return>
        </block_content>}</block></function>
    }</block></class>
}</block></class>
</unit>
