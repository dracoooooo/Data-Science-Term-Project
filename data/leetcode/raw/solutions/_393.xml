<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\raw\solutions\_393.java"><package>package <name><name>com</name><operator>.</operator><name>fishercoder</name><operator>.</operator><name>solutions</name></name>;</package>

<class><specifier>public</specifier> class <name>_393</name> <block>{

    <class><specifier>public</specifier> <specifier>static</specifier> class <name>Solution1</name> <block>{
        <comment type="block" format="javadoc">/**
         * credit: https://discuss.leetcode.com/topic/58338/bit-manipulation-java-6ms/4
         */</comment>
        <function><type><specifier>public</specifier> <name>boolean</name></type> <name>validUtf8</name><parameter_list>(<parameter><decl><type><name><name>int</name><index>[]</index></name></type> <name>data</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <decl_stmt><decl><type><name>int</name></type> <name>count</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>d</name> <range>: <expr><name>data</name></expr></range></decl></init>)</control> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><name>count</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                    <if_stmt><if>if <condition>(<expr><operator>(</operator><name>d</name> <operator>&gt;&gt;</operator> <literal type="number">5</literal><operator>)</operator> <operator>==</operator> <literal type="number">0b110</literal></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><name>count</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
                    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><operator>(</operator><name>d</name> <operator>&gt;&gt;</operator> <literal type="number">4</literal><operator>)</operator> <operator>==</operator> <literal type="number">0b1110</literal></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><name>count</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
                    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><operator>(</operator><name>d</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator> <operator>==</operator> <literal type="number">0b11110</literal></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><name>count</name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
                    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><operator>(</operator><name>d</name> <operator>&gt;&gt;</operator> <literal type="number">7</literal><operator>)</operator> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
                        <return>return <expr><literal type="boolean">false</literal></expr>;</return>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></if> <else>else <block>{<block_content>
                    <if_stmt><if>if <condition>(<expr><operator>(</operator><name>d</name> <operator>&gt;&gt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>!=</operator> <literal type="number">0b10</literal></expr>)</condition> <block>{<block_content>
                        <return>return <expr><literal type="boolean">false</literal></expr>;</return>
                    </block_content>}</block></if> <else>else <block>{<block_content>
                        <expr_stmt><expr><name>count</name><operator>--</operator></expr>;</expr_stmt>
                    </block_content>}</block></else></if_stmt>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></for>
            <return>return <expr><name>count</name> <operator>==</operator> <literal type="number">0</literal></expr>;</return>
        </block_content>}</block></function>
    }</block></class>

}</block></class>
</unit>
