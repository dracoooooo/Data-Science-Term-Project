<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\raw\solutions\_1118.java"><package>package <name><name>com</name><operator>.</operator><name>fishercoder</name><operator>.</operator><name>solutions</name></name>;</package>

<class><specifier>public</specifier> class <name>_1118</name> <block>{
    <class><specifier>public</specifier> <specifier>static</specifier> class <name>Solution1</name> <block>{
        <function><type><specifier>public</specifier> <name>int</name></type> <name>numberOfDays</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>Y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>M</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>map</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[]</index></name><block>{<expr><literal type="number">0</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">31</literal></expr>}</block></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><call><name>isLeapYear</name><argument_list>(<argument><expr><name>Y</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>M</name> <operator>==</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>
                <return>return <expr><literal type="number">29</literal></expr>;</return>
            </block_content>}</block></if> <else>else <block>{<block_content>
                <return>return <expr><name><name>map</name><index>[<expr><name>M</name></expr>]</index></name></expr>;</return>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></function>

        <function><type><specifier>private</specifier> <name>boolean</name></type> <name>isLeapYear</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>year</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <return>return <expr><name>year</name> <operator>%</operator> <literal type="number">4</literal> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <operator>(</operator><operator>(</operator><name>year</name> <operator>%</operator> <literal type="number">100</literal> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>year</name> <operator>%</operator> <literal type="number">400</literal> <operator>==</operator> <literal type="number">0</literal><operator>)</operator> <operator>||</operator> <name>year</name> <operator>%</operator> <literal type="number">100</literal> <operator>!=</operator> <literal type="number">0</literal><operator>)</operator></expr>;</return>
        </block_content>}</block></function>
    }</block></class>
}</block></class>
</unit>
