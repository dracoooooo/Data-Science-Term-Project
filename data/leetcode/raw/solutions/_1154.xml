<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\raw\solutions\_1154.java"><package>package <name><name>com</name><operator>.</operator><name>fishercoder</name><operator>.</operator><name>solutions</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Calendar</name></name>;</import>

<class><specifier>public</specifier> class <name>_1154</name> <block>{
    <class><specifier>public</specifier> <specifier>static</specifier> class <name>Solution1</name> <block>{
        <decl_stmt><decl><type><name>Calendar</name></type> <name>cal</name> <init>= <expr><call><name><name>Calendar</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <function><type><specifier>public</specifier> <name>int</name></type> <name>dayOfYear</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>date</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <decl_stmt><decl><type><name>int</name></type> <name>year</name> <init>= <expr><call><name><name>Integer</name><operator>.</operator><name>parseInt</name></name><argument_list>(<argument><expr><call><name><name>date</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>month</name> <init>= <expr><call><name><name>Integer</name><operator>.</operator><name>parseInt</name></name><argument_list>(<argument><expr><call><name><name>date</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>day</name> <init>= <expr><call><name><name>Integer</name><operator>.</operator><name>parseInt</name></name><argument_list>(<argument><expr><call><name><name>date</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>thirtyDays</name> <init>= <expr><literal type="number">30</literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>thirtyOneDays</name> <init>= <expr><literal type="number">31</literal></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><name>month</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>day</name></expr>;</return>
            </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>month</name> <operator>==</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>day</name> <operator>+</operator> <name>thirtyOneDays</name></expr>;</return>
            </block_content>}</block></if> <else>else <block>{<block_content>
                <decl_stmt><decl><type><name>int</name></type> <name>daysInFeb</name> <init>= <expr><ternary><condition><expr><call><name>isLeapYear</name><argument_list>(<argument><expr><name>year</name></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="number">29</literal></expr> </then><else>: <expr><literal type="number">28</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name>month</name> <operator>==</operator> <literal type="number">3</literal></expr>)</condition> <block>{<block_content>
                    <return>return <expr><name>thirtyOneDays</name> <operator>+</operator> <name>daysInFeb</name> <operator>+</operator> <name>day</name></expr>;</return>
                </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>month</name> <operator>==</operator> <literal type="number">4</literal></expr>)</condition> <block>{<block_content>
                    <return>return <expr><literal type="number">2</literal> <operator>*</operator> <name>thirtyOneDays</name> <operator>+</operator> <name>daysInFeb</name> <operator>+</operator> <name>day</name></expr>;</return>
                </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>month</name> <operator>==</operator> <literal type="number">5</literal></expr>)</condition> <block>{<block_content>
                    <return>return <expr><literal type="number">2</literal> <operator>*</operator> <name>thirtyOneDays</name> <operator>+</operator> <name>daysInFeb</name> <operator>+</operator> <name>day</name> <operator>+</operator> <name>thirtyDays</name></expr>;</return>
                </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>month</name> <operator>==</operator> <literal type="number">6</literal></expr>)</condition> <block>{<block_content>
                    <return>return <expr><literal type="number">3</literal> <operator>*</operator> <name>thirtyOneDays</name> <operator>+</operator> <name>daysInFeb</name> <operator>+</operator> <name>day</name> <operator>+</operator> <name>thirtyDays</name></expr>;</return>
                </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>month</name> <operator>==</operator> <literal type="number">7</literal></expr>)</condition> <block>{<block_content>
                    <return>return <expr><literal type="number">3</literal> <operator>*</operator> <name>thirtyOneDays</name> <operator>+</operator> <name>daysInFeb</name> <operator>+</operator> <name>day</name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>thirtyDays</name></expr>;</return>
                </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>month</name> <operator>==</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>
                    <return>return <expr><literal type="number">4</literal> <operator>*</operator> <name>thirtyOneDays</name> <operator>+</operator> <name>daysInFeb</name> <operator>+</operator> <name>day</name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>thirtyDays</name></expr>;</return>
                </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>month</name> <operator>==</operator> <literal type="number">9</literal></expr>)</condition> <block>{<block_content>
                    <return>return <expr><literal type="number">5</literal> <operator>*</operator> <name>thirtyOneDays</name> <operator>+</operator> <name>daysInFeb</name> <operator>+</operator> <name>day</name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>thirtyDays</name></expr>;</return>
                </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>month</name> <operator>==</operator> <literal type="number">10</literal></expr>)</condition> <block>{<block_content>
                    <return>return <expr><literal type="number">5</literal> <operator>*</operator> <name>thirtyOneDays</name> <operator>+</operator> <name>daysInFeb</name> <operator>+</operator> <name>day</name> <operator>+</operator> <literal type="number">3</literal> <operator>*</operator> <name>thirtyDays</name></expr>;</return>
                </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>month</name> <operator>==</operator> <literal type="number">11</literal></expr>)</condition> <block>{<block_content>
                    <return>return <expr><literal type="number">6</literal> <operator>*</operator> <name>thirtyOneDays</name> <operator>+</operator> <name>daysInFeb</name> <operator>+</operator> <name>day</name> <operator>+</operator> <literal type="number">3</literal> <operator>*</operator> <name>thirtyDays</name></expr>;</return>
                </block_content>}</block></if> <else>else <block>{<block_content>
                    <return>return <expr><literal type="number">6</literal> <operator>*</operator> <name>thirtyOneDays</name> <operator>+</operator> <name>daysInFeb</name> <operator>+</operator> <name>day</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>thirtyDays</name></expr>;</return>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></function>

        <function><type><specifier>private</specifier> <name>boolean</name></type> <name>isLeapYear</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>year</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>cal</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>Calendar</name><operator>.</operator><name>YEAR</name></name></expr></argument>, <argument><expr><name>year</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><call><name><name>cal</name><operator>.</operator><name>getActualMaximum</name></name><argument_list>(<argument><expr><name><name>Calendar</name><operator>.</operator><name>DAY_OF_YEAR</name></name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">365</literal></expr>;</return>
        </block_content>}</block></function>
    }</block></class>
}</block></class>
</unit>
