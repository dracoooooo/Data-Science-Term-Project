<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\raw\solutions\_1030.java"><package>package <name><name>com</name><operator>.</operator><name>fishercoder</name><operator>.</operator><name>solutions</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Queue</name></name>;</import>

<class><specifier>public</specifier> class <name>_1030</name> <block>{
    <class><specifier>public</specifier> <specifier>static</specifier> class <name>Solution1</name> <block>{
        <function><type><specifier>public</specifier> <name><name>int</name><index>[]</index><index>[]</index></name></type> <name>allCellsDistOrder</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>R</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>C</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>r0</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>c0</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <decl_stmt><decl><type><name><name>int</name><index>[]</index><index>[]</index></name></type> <name>result</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[<expr><name>R</name> <operator>*</operator> <name>C</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name><name>Queue</name><argument_list type="generic">&lt;<argument><name><name>int</name><index>[]</index></name></argument>&gt;</argument_list></name></type> <name>queue</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>queue</name><operator>.</operator><name>offer</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>int</name><index>[]</index></name><block>{<expr><name>r0</name></expr>, <expr><name>c0</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name><name>boolean</name><index>[]</index><index>[]</index></name></type> <name>visited</name> <init>= <expr><operator>new</operator> <name><name>boolean</name><index>[<expr><name>R</name></expr>]</index><index>[<expr><name>C</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
            <while>while <condition>(<expr><operator>!</operator><call><name><name>queue</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>cell</name> <init>= <expr><call><name><name>queue</name><operator>.</operator><name>poll</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>int</name></type> <name>row</name> <init>= <expr><name><name>cell</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>int</name></type> <name>col</name> <init>= <expr><name><name>cell</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <if_stmt><if>if <condition>(<expr><name>row</name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>||</operator> <name>row</name> <operator>&gt;=</operator> <name>R</name> <operator>||</operator> <name>col</name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>||</operator> <name>col</name> <operator>&gt;=</operator> <name>C</name> <operator>||</operator> <name><name>visited</name><index>[<expr><name>row</name></expr>]</index><index>[<expr><name>col</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
                    <continue>continue;</continue>
                </block_content>}</block></if></if_stmt>

                <expr_stmt><expr><name><name>visited</name><index>[<expr><name>row</name></expr>]</index><index>[<expr><name>col</name></expr>]</index></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>result</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name> <operator>=</operator> <operator>new</operator> <name><name>int</name><index>[]</index></name><block>{<expr><name>row</name></expr>, <expr><name>col</name></expr>}</block></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>queue</name><operator>.</operator><name>offer</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>int</name><index>[]</index></name><block>{<expr><name>row</name></expr>, <expr><name>col</name> <operator>+</operator> <literal type="number">1</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>queue</name><operator>.</operator><name>offer</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>int</name><index>[]</index></name><block>{<expr><name>row</name> <operator>+</operator> <literal type="number">1</literal></expr>, <expr><name>col</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>queue</name><operator>.</operator><name>offer</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>int</name><index>[]</index></name><block>{<expr><name>row</name> <operator>-</operator> <literal type="number">1</literal></expr>, <expr><name>col</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>queue</name><operator>.</operator><name>offer</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>int</name><index>[]</index></name><block>{<expr><name>row</name></expr>, <expr><name>col</name> <operator>-</operator> <literal type="number">1</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></while>
            <return>return <expr><name>result</name></expr>;</return>
        </block_content>}</block></function>
    }</block></class>
}</block></class>
</unit>
