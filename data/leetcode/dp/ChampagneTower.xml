<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\dp\ChampagneTower.java"><class><specifier>public</specifier> class <name>ChampagneTower</name> <block>{
    <function><type><specifier>public</specifier> <name>double</name></type> <name>champagneTower</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>poured</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query_row</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query_glass</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name><name>double</name><index>[]</index><index>[]</index></name></type> <name>A</name> <init>= <expr><operator>new</operator> <name><name>double</name><index>[<expr><literal type="number">102</literal></expr>]</index><index>[<expr><literal type="number">102</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name>A</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>double</name><operator>)</operator> <name>poured</name></expr>;</expr_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>r</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>r</name> <operator>&lt;=</operator> <name>query_row</name></expr>;</condition> <incr><expr><operator>++</operator><name>r</name></expr></incr>)</control> <block>{<block_content>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>c</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>c</name> <operator>&lt;=</operator> <name>r</name></expr>;</condition> <incr><expr><operator>++</operator><name>c</name></expr></incr>)</control> <block>{<block_content>
                <decl_stmt><decl><type><name>double</name></type> <name>q</name> <init>= <expr><operator>(</operator><name><name>A</name><index>[<expr><name>r</name></expr>]</index><index>[<expr><name>c</name></expr>]</index></name> <operator>-</operator> <literal type="number">1.0</literal><operator>)</operator> <operator>/</operator> <literal type="number">2.0</literal></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name>q</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name><name>A</name><index>[<expr><name>r</name><operator>+</operator><literal type="number">1</literal></expr>]</index><index>[<expr><name>c</name></expr>]</index></name> <operator>+=</operator> <name>q</name></expr>;</expr_stmt>
                    <expr_stmt><expr><name><name>A</name><index>[<expr><name>r</name><operator>+</operator><literal type="number">1</literal></expr>]</index><index>[<expr><name>c</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>+=</operator> <name>q</name></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></for>

        <return>return <expr><call><name><name>Math</name><operator>.</operator><name>min</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>A</name><index>[<expr><name>query_row</name></expr>]</index><index>[<expr><name>query_glass</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
}</block></class>
</unit>
