<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\dp\KnightProbabilityinChessboard.java"><class><specifier>public</specifier> class <name>KnightProbabilityinChessboard</name> <block>{
    <function><type><specifier>public</specifier> <name>double</name></type> <name>knightProbability</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>N</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>K</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>sr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>sc</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name><name>double</name><index>[]</index><index>[]</index></name></type> <name>dp</name> <init>= <expr><operator>new</operator> <name><name>double</name><index>[<expr><name>N</name></expr>]</index><index>[<expr><name>N</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>dr</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[]</index></name><block>{<expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>}</block></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>dc</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[]</index></name><block>{<expr><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><name><name>dp</name><index>[<expr><name>sr</name></expr>]</index><index>[<expr><name>sc</name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
        <for>for <control>(<init>;</init> <condition><expr><name>K</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>K</name><operator>--</operator></expr></incr>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name><name>double</name><index>[]</index><index>[]</index></name></type> <name>dp2</name> <init>= <expr><operator>new</operator> <name><name>double</name><index>[<expr><name>N</name></expr>]</index><index>[<expr><name>N</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>r</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>r</name> <operator>&lt;</operator> <name>N</name></expr>;</condition> <incr><expr><name>r</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                <for>for <control>(<init><decl><type><name>int</name></type> <name>c</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>c</name> <operator>&lt;</operator> <name>N</name></expr>;</condition> <incr><expr><name>c</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                    <for>for <control>(<init><decl><type><name>int</name></type> <name>k</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>k</name> <operator>&lt;</operator> <literal type="number">8</literal></expr>;</condition> <incr><expr><name>k</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                        <decl_stmt><decl><type><name>int</name></type> <name>cr</name> <init>= <expr><name>r</name> <operator>+</operator> <name><name>dr</name><index>[<expr><name>k</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                        <decl_stmt><decl><type><name>int</name></type> <name>cc</name> <init>= <expr><name>c</name> <operator>+</operator> <name><name>dc</name><index>[<expr><name>k</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                        <if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>&lt;=</operator> <name>cr</name> <operator>&amp;&amp;</operator> <name>cr</name> <operator>&lt;</operator> <name>N</name> <operator>&amp;&amp;</operator> <literal type="number">0</literal> <operator>&lt;=</operator> <name>cc</name> <operator>&amp;&amp;</operator> <name>cc</name> <operator>&lt;</operator> <name>N</name></expr>)</condition> <block>{<block_content>
                            <expr_stmt><expr><name><name>dp2</name><index>[<expr><name>cr</name></expr>]</index><index>[<expr><name>cc</name></expr>]</index></name> <operator>+=</operator> <name><name>dp</name><index>[<expr><name>r</name></expr>]</index><index>[<expr><name>c</name></expr>]</index></name> <operator>/</operator> <literal type="number">8.0</literal></expr>;</expr_stmt>
                        </block_content>}</block></if></if_stmt>
                    </block_content>}</block></for>
                </block_content>}</block></for>
            </block_content>}</block></for>
            <expr_stmt><expr><name>dp</name> <operator>=</operator> <name>dp2</name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <decl_stmt><decl><type><name>double</name></type> <name>ans</name> <init>= <expr><literal type="number">0.0</literal></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name><name>double</name><index>[]</index></name></type> <name>row</name><range>: <expr><name>dp</name></expr></range></decl></init>)</control> <block>{<block_content>
            <for>for <control>(<init><decl><type><name>double</name></type> <name>x</name><range>: <expr><name>row</name></expr></range></decl></init>)</control><block type="pseudo"><block_content> <expr_stmt><expr><name>ans</name> <operator>+=</operator> <name>x</name></expr>;</expr_stmt></block_content></block></for>
        </block_content>}</block></for>
        <return>return <expr><name>ans</name></expr>;</return>
</block_content>}</block></function></block></class>
</unit>
