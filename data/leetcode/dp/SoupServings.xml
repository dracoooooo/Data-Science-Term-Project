<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\dp\SoupServings.java"><class><specifier>public</specifier> class <name>SoupServings</name> <block>{
    <function><type><specifier>public</specifier> <name>double</name></type> <name>soupServings</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>N</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><name>N</name> <operator>=</operator> <name>N</name><operator>/</operator><literal type="number">25</literal> <operator>+</operator> <operator>(</operator><ternary><condition><expr><name>N</name><operator>%</operator><literal type="number">25</literal> <operator>&gt;</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>N</name> <operator>&gt;=</operator> <literal type="number">500</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">1.0</literal></expr>;</return></block_content></block></if></if_stmt>

        <decl_stmt><decl><type><name><name>double</name><index>[]</index><index>[]</index></name></type> <name>memo</name> <init>= <expr><operator>new</operator> <name><name>double</name><index>[<expr><name>N</name><operator>+</operator><literal type="number">1</literal></expr>]</index><index>[<expr><name>N</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>s</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>s</name> <operator>&lt;=</operator> <literal type="number">2</literal><operator>*</operator><name>N</name></expr>;</condition> <incr><expr><operator>++</operator><name>s</name></expr></incr>)</control> <block>{<block_content>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>N</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
                <decl_stmt><decl><type><name>int</name></type> <name>j</name> <init>= <expr><name>s</name><operator>-</operator><name>i</name></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name>j</name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>||</operator> <name>j</name> <operator>&gt;</operator> <name>N</name></expr>)</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>
                <decl_stmt><decl><type><name>double</name></type> <name>ans</name> <init>= <expr><literal type="number">0.0</literal></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name>i</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>ans</name> <operator>=</operator> <literal type="number">1.0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <if_stmt><if>if <condition>(<expr><name>i</name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>j</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>ans</name> <operator>=</operator> <literal type="number">0.5</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <if_stmt><if>if <condition>(<expr><name>i</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>j</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name>ans</name> <operator>=</operator> <literal type="number">0.25</literal> <operator>*</operator> <operator>(</operator><name><name>memo</name><index>[<expr><call><name>M</name><argument_list>(<argument><expr><name>i</name><operator>-</operator><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>]</index><index>[<expr><name>j</name></expr>]</index></name> <operator>+</operator> <name><name>memo</name><index>[<expr><call><name>M</name><argument_list>(<argument><expr><name>i</name><operator>-</operator><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>]</index><index>[<expr><call><name>M</name><argument_list>(<argument><expr><name>j</name><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>]</index></name> <operator>+</operator>
                                  <name><name>memo</name><index>[<expr><call><name>M</name><argument_list>(<argument><expr><name>i</name><operator>-</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>]</index><index>[<expr><call><name>M</name><argument_list>(<argument><expr><name>j</name><operator>-</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>]</index></name> <operator>+</operator> <name><name>memo</name><index>[<expr><call><name>M</name><argument_list>(<argument><expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>]</index><index>[<expr><call><name>M</name><argument_list>(<argument><expr><name>j</name><operator>-</operator><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
                <expr_stmt><expr><name><name>memo</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name> <operator>=</operator> <name>ans</name></expr>;</expr_stmt>

            </block_content>}</block></for>
        </block_content>}</block></for>
        <return>return <expr><name><name>memo</name><index>[<expr><name>N</name></expr>]</index><index>[<expr><name>N</name></expr>]</index></name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>int</name></type> <name>M</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name><name>Math</name><operator>.</operator><name>max</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>x</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>

}</block></class>
</unit>
