<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\86134\Desktop\Data-Science-Term-Project\data\leetcode\dp\TargetSum.java"><class><specifier>public</specifier> class <name>TargetSum</name> <block>{
    <function><type><specifier>public</specifier> <name>int</name></type> <name>findTargetSumWays</name><parameter_list>(<parameter><decl><type><name><name>int</name><index>[]</index></name></type> <name>nums</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>S</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>dp</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[<expr><literal type="number">2001</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name>dp</name><index>[<expr><name><name>nums</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <literal type="number">1000</literal></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>dp</name><index>[<expr><operator>-</operator><name><name>nums</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <literal type="number">1000</literal></expr>]</index></name> <operator>+=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>nums</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>next</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[<expr><literal type="number">2001</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>sum</name> <init>= <expr><operator>-</operator><literal type="number">1000</literal></expr></init></decl>;</init> <condition><expr><name>sum</name> <operator>&lt;=</operator> <literal type="number">1000</literal></expr>;</condition> <incr><expr><name>sum</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><name><name>dp</name><index>[<expr><name>sum</name> <operator>+</operator> <literal type="number">1000</literal></expr>]</index></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name><name>next</name><index>[<expr><name>sum</name> <operator>+</operator> <name><name>nums</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+</operator> <literal type="number">1000</literal></expr>]</index></name> <operator>+=</operator> <name><name>dp</name><index>[<expr><name>sum</name> <operator>+</operator> <literal type="number">1000</literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name><name>next</name><index>[<expr><name>sum</name> <operator>-</operator> <name><name>nums</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+</operator> <literal type="number">1000</literal></expr>]</index></name> <operator>+=</operator> <name><name>dp</name><index>[<expr><name>sum</name> <operator>+</operator> <literal type="number">1000</literal></expr>]</index></name></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <expr_stmt><expr><name>dp</name> <operator>=</operator> <name>next</name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <return>return <expr><ternary><condition><expr><name>S</name> <operator>&gt;</operator> <literal type="number">1000</literal></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><name><name>dp</name><index>[<expr><name>S</name> <operator>+</operator> <literal type="number">1000</literal></expr>]</index></name></expr></else></ternary></expr>;</return>
    </block_content>}</block></function>
}</block></class>
</unit>
